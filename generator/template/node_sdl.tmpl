{{- $node := . -}}
{{- $name := .Name -}}

{{/* Enums */ -}}
enum {{$name}}OrderBy {
  NATURAL
  ID_ASC
  ID_DESC
{{- range $i := $node.Indexes}}
  {{$i.Name | upperCase}}_ASC
  {{$i.Name | upperCase}}_DESC
{{- end}}
}

{{/* Types */ -}}
type {{$name}} implements Node {
  id: ID!
{{- range $f := $node.Fields}}
{{- if not $f.Sensitive }}
  {{$f.Name | camelize | lowerCaseFirst}}: {{$f.Type | scalarName}}{{if not $f.Nillable}}!{{end}}
{{- end}}
{{- end}}
{{- range $e := $node.Edges}}
{{- $eName := $e.Type.Name}}
{{- if or $e.M2O $e.O2O }}
  {{$e.Name | camelize | lowerCaseFirst}}: {{$eName}}{{if not $e.Optional}}!{{end}}
{{- else if or $e.O2M $e.M2M}}
  """Reads and enables pagination through a set of `{{$eName}}`."""
  {{$e.Name | camelize | lowerCaseFirst}}(after: String, before: String, first: Int, last: Int, where: {{$eName}}WhereInput, orderBy: [{{$eName}}OrderBy!]): {{$eName}}Connection
{{- end}}
{{- end}}
}

"""A `{{$name}}` edge in the connection."""
type {{$name}}Edge {
  """A cursor for use in pagination."""
  cursor: String!
  """The `{{$name}}` at the end of the edge."""
  node: {{$name}}!
}

"""A connection to a list of `{{$name}}` values."""
type {{$node.Name}}Connection {
  """A list of edges which contains the `{{$name}}` and cursor to aid in pagination."""
  edges: [{{$name}}Edge!]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of all `{{$name}}` you could get from the connection."""
  totalCount: Int!
}

type Create{{$name}}Payload {
  """The exact same `clientMutationId` that was provided in the mutation input, unchanged and unused. May be used by a client to track mutations."""
  clientMutationId: String
  """The `{{$name}}` that was created by this mutation."""
  {{$name | lowerCaseFirst}}: {{$name}}!
}

type Delete{{$name}}Payload {
  """The exact same `clientMutationId` that was provided in the mutation input, unchanged and unused. May be used by a client to track mutations."""
  clientMutationId: String
  """The `{{$name}}` that was deleted by this mutation."""
  {{$name | lowerCaseFirst}}: {{$name}}!
  deleted{{$name}}NodeId: ID!
}

{{/* Inputes */ -}}
input {{$name}}WhereInput {
  id: StringFilter
{{- range $f := $node.Fields}}
{{- if and $f.Unique (not $f.Sensitive)}}
  {{$f.Name | camelize | lowerCaseFirst}}: {{$f.Type | scalarName}}Filter
{{- end}}
{{- end}}
  AND: [{{$name}}WhereInput!]
  OR: [{{$name}}WhereInput!]
  NOT: [{{$name}}WhereInput!]
}

input {{$name}}Input {
{{- range $f := $node.Fields}}
  {{$f.Name | camelize | lowerCaseFirst}}: {{$f.Type | scalarName}}{{if not $f.Optional}}!{{end}}
{{- end}}
}

input Create{{$name}}Input {
  clientMutationId: String
  {{$name | lowerCaseFirst}}: {{$name}}Input!
}

input Delete{{$name}}Input {
  clientMutationId: String
  id: ID!
}

{{/* Query */ -}}
extend type Query {
  {{$name | lowerCaseFirst}}(id: ID!): {{$name}}
{{- range $f := $node.Fields}}
{{- if and $f.Unique (not $f.Sensitive)}}
  {{$name | camelize | lowerCaseFirst}}By{{$f.Name | upperCaseFirst}}({{$f.Name | lowerCaseFirst}}: {{$f.Type | scalarName}}!): {{$name}}
{{- end}}
{{- end}}
  """Reads and enables pagination through a set of `{{$name}}`."""
  {{$name | camelize | lowerCaseFirst | pluralize}}(after: String, before: String, first: Int, last: Int, where: {{$name}}WhereInput, orderBy: [{{$name}}OrderBy!]): {{$name}}Connection
}

{{/* Mutation */ -}}
extend type Mutation {
  create{{$name}}(input: Create{{$name}}Input!): Create{{$name}}Payload
  delete{{$name}}(input: Delete{{$name}}Input!): Delete{{$name}}Payload
}

